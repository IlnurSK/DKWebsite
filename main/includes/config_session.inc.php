<?php

// Конфигурирование параметров сервера и системы сессий

ini_set('session.use_only_cookies', 1); // использование только куков
ini_set('session.use_strict_mode', 1); // использование только строгого типа данных declare(strict_types=1);

session_set_cookie_params([
    'lifetime' => 1800, // время жизни для куков в секундах 1800 сек = 30 минут
    'domain' => 'localhost', // домен в котором работают куки (example.com)
    'path' => '/', // указывает на путь внутри вашего домена ('/' - любой каталог домена)
    'secure' => true, // гарантирует что куки работают только в https соединении (не в http)
    'httponly' => true // ограничивает доступ к скриптам в браузере
]);

session_start(); // создаем сессию

// Проверяем есть ли пользователь вошедший в систему в текущей сессии (залогинен?)
if (isset($_SESSION["user_id"])) {
    if (!isset($_SESSION['last_regeneration'])) { // проверям была ли создана ли переменная сессии (last_regeneration), если нет то создаем (то есть это проверка на запуск страницы в первые)
        regenerate_session_id_loggedin(); // запуск пользовательской функции обновления ID сессии (залогиненного пользователя)
    } else {
        $interval = 60 * 30; // создаем интервал 1800 сек, то есть 30 минут

        if (time() - $_SESSION['last_regeneration'] >= $interval) { // если сессия была создана более 30 минут назад, пересоздаем сессию
            regenerate_session_id_loggedin(); // запуск пользовательской функции обновления ID сессии  (залогиненного пользователя)
        }
    }
} else { // если пользователь незалогинен выполняем следующий скрипт
    // Автоматическое пересоздание ID сессии в более надежный вариант (каждые 30 минут)

    if (!isset($_SESSION['last_regeneration'])) { // проверям была ли создана ли переменная сессии (last_regeneration), если нет то создаем (то есть это проверка на запуск страницы в первые)
        regenerate_session_id(); // запуск пользовательской функции обновления ID сессии
    } else {
        $interval = 60 * 30; // создаем интервал 1800 сек, то есть 30 минут

        if (time() - $_SESSION['last_regeneration'] >= $interval) { // если сессия была создана более 30 минут назад, пересоздаем сессию
            regenerate_session_id(); // запуск пользовательской функции обновления ID сессии
        }
    }
}



// Создаем пользовательскую функцию обновления ID сессии (для незалогиненного пользователя)
function regenerate_session_id(): void
{
    session_regenerate_id(true); // пересоздание ID сессии в более надежный вариант
    $_SESSION['last_regeneration'] = time(); // создаем переменную last_regeneration и присваиваем ей текущее время time()
}

// Создаем пользовательскую функцию обновления ID сессии (для залогиненного пользователя)
function regenerate_session_id_loggedin(): void
{
    session_regenerate_id(true); // пересоздание ID сессии в более надежный вариант


    $userId = $_SESSION["user_id"]; // создаем переменную с ID пользователя
    $newSessionID = session_create_id(); // Создание нового ID сессии (это не обновление старого ID как в session_regenerate_id, а именно пересоздание)
    $sessionID = $newSessionID . "_" . $userId; // создаем модицифированный ID сессии, добавляя к нему ID пользователя с БД
    session_id($sessionID); // обновляем ID сессии на модифицированный

    $_SESSION['last_regeneration'] = time(); // создаем переменную last_regeneration и присваиваем ей текущее время time()
}



